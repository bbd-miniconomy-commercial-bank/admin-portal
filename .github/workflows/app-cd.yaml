name: Application CD

on:
  workflow_call:

permissions:
  checks: write
  id-token: write
  contents: write
  security-events: write

jobs:

  app-cd:
    name: App CD
    runs-on: ubuntu-latest
    environment: Production

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@main
        with:
          role-to-assume: ${{ secrets.AWS_ASSUME_ROLE }}
          aws-region: eu-west-1
          role-session-name: API_CD_GitHub_to_AWS_via_FederatedOIDC

      - name: Retrieve Service config from AWS Parameter Store
        run: |
          aws ssm get-parameters-by-path --path "/admin-portal/prod/" --recursive --with-decryption > parameters.json
  
      - name: Create .env file
        run: |
          jq -r '.Parameters[] | "\(.Value)"' parameters.json > .env

      - name: Install App dependencies
        run: |
          npm install

      - name: Build Project
        run: npm run build
          
      - name: Delete all objects in S3 bucket
        run: aws s3 rm s3://${{ secrets.BUCKET_NAME }} --recursive

      - name: Upload artifact to S3
        run: |
          aws s3 cp assets s3://${{ secrets.BUCKET_NAME }}/assets --recursive
          aws s3 cp index.html s3://${{ secrets.BUCKET_NAME }}/index.html
        working-directory: dist

      - name: Copy package.json to dist folder
        run: cp package.json dist/

      - name: Zip dist folder
        run: zip -r dist.zip dist/

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release ${{ github.ref }}
          body: |
            Application Release
          draft: false
          prerelease: false


      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist.zip
          asset_name: dist.zip
          asset_content_type: application/zip